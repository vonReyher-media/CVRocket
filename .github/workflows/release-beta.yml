name: Beta Release

on:
  push:
    tags:
      - 'v*-beta*'

jobs:
  build-and-publish:
    name: Publish @cvrocket/core (beta)
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: 'cvrocket'


      - name: Show directory structure
        run: tree -a -I 'node_modules|.git'
        working-directory: ${{ github.workspace }}/cvrocket

      - name: Extract tag
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      

      - name: Install dependencies (cvrocket)
        run: pnpm install --frozen-lockfile
        working-directory: ${{ github.workspace }}/cvrocket


      - name: Build package
        working-directory: packages/core
        run: pnpm build

      - name: Publish to npm (beta)
        working-directory: packages/core
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish --access public --tag beta --no-git-checks || echo "Already published"

  create-release:
    name: Create GitHub Pre-Release
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Beta GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
